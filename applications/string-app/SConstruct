import os, sys

PROTOMOL_HOME = os.environ['PROTOMOL_HOME']
execfile(PROTOMOL_HOME + os.sep + 'compiler.py')

# Command Line Options
opts = Options('options.py')
Export('opts')

opts.AddOptions(
    BoolOption('lapack', 'Use LAPACK', 0),
    BoolOption('simtk_lapack', 'Use SimTK LAPACK', 0),
)

compiler_add_opts()

# Create environment and import external PATH
env = Environment(options = opts, ENV = os.environ)

Export('env')
 
# Configure
conf = Configure(env)
Export('conf')

# Import subdir build files
subsrc = SConscript('src/SConscript')

# Get options

use_lapack = int(env.get('lapack', 0))
use_simtk_lapack = int(env.get('simtk_lapack', 0))


# Configure compiler
compiler_configure()


# Include string-app and protomol
env.Append(CPPPATH = ['#',PROTOMOL_HOME])


# Generate Help
Help(opts.GenerateHelpText(env))



if not env.GetOption('clean'):
    execfile(PROTOMOL_HOME + os.sep + 'config.py')

    env.Append(LIBPATH = [PROTOMOL_HOME])
    
    if not conf.CheckLib('libprotomol'):
        print 'Need protomol >= 3.0 please set PROTOMOL_HOME';
        Exit(1)
    if not conf.CheckLib('lapack'):
        print 'Need Lapack';
        Exit(1)
    if not conf.CheckLib('blas'):
        print 'Need Blas';
        Exit(1)
    if not conf.CheckLib('g2c'):
        print 'Need G2C';
        Exit(1)
   
    env = conf.Finish() 


# Get source
allsrc = []
for s in subsrc:
    allsrc.append('#/src/' + s)

allsrc.append('main.cpp')

#print allsrc

env.Program('stringapp',allsrc)
