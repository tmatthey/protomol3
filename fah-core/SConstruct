import os

# ProtoMol
if os.environ.has_key('PROTOMOL_HOME'):
  PROTOMOL_HOME = os.environ['PROTOMOL_HOME']
else: PROTOMOL_HOME = '../protomol'

if not os.path.isdir(PROTOMOL_HOME):
  print 'Cannot find protomol.  Please set PROTOMOL_HOME.'
  Exit(1)

execfile(PROTOMOL_HOME + '/boost.py')

opts = Options('options.py')

opts.AddOptions(
    BoolOption('lapack', 'Use LAPACK', 0),
    BoolOption('simtk_lapack', 'Use SimTK LAPACK', 0)
)

env = Environment(options = opts, ENV = os.environ)
conf = Configure(env, custom_tests = {'BoostVersion' : boost_check_version})

if env['CC'] == 'cl':
  env.Append(CCFLAGS = '/TP /EHsc /Zp') # C++ mode

if env['CC'] == 'gcc':
  env.Append(CCFLAGS = '-Wall -Werror -g')
  env.Append(CPPDEFINES = ['DEBUG'])

if not env.GetOption('clean'):
  # ProtoMol
  env.Append(CPPPATH = [PROTOMOL_HOME])
  env.Append(LIBPATH = [PROTOMOL_HOME])

  if not conf.CheckLib('protomol-fah'):
    print 'Need protomol >= 3.0 please set PROTOMOL_HOME';
    Exit(1)
  
  use_lapack = int(env.get('lapack', 0))
  use_simtk_lapack = int(env.get('simtk_lapack', 0))

  execfile(PROTOMOL_HOME + '/config.py')
  execfile(PROTOMOL_HOME + '/configfah.py')
  config_configure()
  fah_configure()

src = ['protomol.cpp']

if not env['PLATFORM'] == 'win32':
  env.Append(PROGSUFFIX = '.exe')

env.Program('FahCore_b4', src)

